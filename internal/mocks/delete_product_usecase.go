// Code generated by MockGen. DO NOT EDIT.
// Source: internal/controller/http/v1/handler/product/delete.go

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockDeleteProductUsecase is a mock of DeleteProductUsecase interface.
type MockDeleteProductUsecase struct {
	ctrl     *gomock.Controller
	recorder *MockDeleteProductUsecaseMockRecorder
}

// MockDeleteProductUsecaseMockRecorder is the mock recorder for MockDeleteProductUsecase.
type MockDeleteProductUsecaseMockRecorder struct {
	mock *MockDeleteProductUsecase
}

// NewMockDeleteProductUsecase creates a new mock instance.
func NewMockDeleteProductUsecase(ctrl *gomock.Controller) *MockDeleteProductUsecase {
	mock := &MockDeleteProductUsecase{ctrl: ctrl}
	mock.recorder = &MockDeleteProductUsecaseMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockDeleteProductUsecase) EXPECT() *MockDeleteProductUsecaseMockRecorder {
	return m.recorder
}

// Delete mocks base method.
func (m *MockDeleteProductUsecase) Delete(ctx context.Context, ID int64) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Delete", ctx, ID)
	ret0, _ := ret[0].(error)
	return ret0
}

// Delete indicates an expected call of Delete.
func (mr *MockDeleteProductUsecaseMockRecorder) Delete(ctx, ID interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Delete", reflect.TypeOf((*MockDeleteProductUsecase)(nil).Delete), ctx, ID)
}
